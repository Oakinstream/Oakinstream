@model Oakinstream.ViewModels.ProjectViewModel

@{
    ViewBag.Title = "Edit Project";
}

<div class="container text-center">
    <div class="row">
        <div class="col-md-12  NormalBorder-Bottom">
            <br />
            <h1 class="text-primary"><strong>@ViewBag.Title</strong></h1>
        </div>
    </div>

    <div>
        @Html.ActionLink("Back to Projects", "Index")
    </div>
    <br />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="jumbotron Margin-Top-20 NormalBorder">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <div class="col-md-4 text-right">
                    <h4><span class="glyphicon glyphicon-user"></span> @Html.LabelFor(model => model.Name):</h4>
                </div>
                <div class="col-md-8 NormalBorder-Left text-left">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "FormBox" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-4 text-right">
                    <h4><span class="glyphicon glyphicon-th-large"></span> @Html.LabelFor(model => model.ProjectCategoryID, "Category"):</h4>
                </div>
                <div class="col-md-8 NormalBorder-Left text-left">
                    @Html.DropDownListFor(vm => vm.ProjectCategoryID, Model.ProjectCategoryList, htmlAttributes: new { @class = "FormBox" })
                    @Html.ValidationMessageFor(model => model.ProjectCategoryID, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-4 text-right">
                    <h4><span class="glyphicon glyphicon-picture"></span> Project Image </h4>
                </div>
                <div class="col-md-8 NormalBorder-Left text-left">
                    @Html.DropDownListFor(vm => vm.ProjectImageID, Model.ProjectImageList, "Choose Image", htmlAttributes: new { @class = "FormBox" })
                    @Html.ValidationMessageFor(model => model.ProjectImageID, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-4 text-right">
                    <h4><span class="glyphicon glyphicon-file"></span> File 1</h4>
                </div>
                <div class="col-md-8 NormalBorder-Left text-left">
                    @Html.DropDownListFor(vm => vm.ProjectFiles, Model.FileList[0], "Choose File", htmlAttributes: new { @class = "FormBox" })
                    @Html.ValidationMessageFor(model => model.FileList, "", new { @class = "text-danger" })
                    <button type="button" class="btn btn-link" data-toggle="collapse" data-target="#Files" style="">Add more images</button>
                </div>
            </div>
            <hr />
            <div id="Files" class="collapse">
                @for (int i = 1; i < Model.FileList.Count; i++)
                {
                    <div class="row Margin-Top-20">
                        <div class="col-md-4 text-right">
                            <h4><span class="glyphicon glyphicon-file"></span> File @(i + 1):</h4>
                        </div>
                        <div class="col-md-8 NormalBorder-Left text-left">
                            @Html.DropDownListFor(vm => vm.ProjectFiles, Model.FileList[i], "Choose File", htmlAttributes: new { @class = "FormBox" })
                            @Html.ValidationMessageFor(model => model.FileList, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            </div>
            <hr />
            <div class="row">
                <div class="col-md-4 text-right">
                    <h4><span class="glyphicon glyphicon-info-sign"></span> @Html.LabelFor(model => model.Description)</h4>
                </div>
                <div class="col-md-8 NormalBorder-Left text-left">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { rows = "10", cols = "50", style = "resize:none; max-width:none;" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-12">
                    <input type="submit" value="Edit" class="btn btn-success FormBtn" />
                </div>
            </div>
            <br />
        </div>
    }
</div>
