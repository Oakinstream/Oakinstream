@model Oakinstream.ViewModels.HomeViewModel

@{
    ViewBag.Title = "Edit Home";
}

<div class="container text-center  home-edit-container">
    <div class="row">
        <div class="col-md-12  NormalBorder-Bottom Margin-Top-20">
            <br />
            <h1 class="text-primary"><strong>@ViewBag.Title</strong></h1>
        </div>
    </div>

    <div>
        @Html.ActionLink("Back to home", "Index")
    </div>
    <br />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="jumbotron Margin-Top-20 NormalBorder">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-4 text-right">
                <h4><span class="glyphicon glyphicon-book"></span> @Html.LabelFor(model => model.Title):</h4>
            </div>
            <div class="col-md-8 NormalBorder-Left text-left">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "FormBox" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />

        @for (int i = 0; i < Model.ImageLists.Count; i++)
        {
            <div class="row Margin-Top-20">
                <div class="col-md-4 text-right">
                    <h4><span class="glyphicon glyphicon-picture"></span> File @(i + 1):</h4>
                </div>
                <div class="col-md-8 NormalBorder-Left text-left">
                    @Html.DropDownListFor(vm => vm.HomeImages, Model.ImageLists[i], "Choose Image", htmlAttributes: new { @class = "FormBox" })
                    @Html.ValidationMessageFor(model => model.HomeImages, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
        }

        <hr />
        <div class="row">
            <div class="col-md-4 text-right">
                <h4><span style="resize:none" class="glyphicon glyphicon-info-sign"></span> @Html.LabelFor(model => model.Info1)</h4>
            </div>
            <div class="col-md-8 NormalBorder-Left text-left">
                @Html.EditorFor(model => model.Info1, new { htmlAttributes = new { rows = "10", cols = "50", style = "resize:none; max-width:none;" } })
                @Html.ValidationMessageFor(model => model.Info1, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-4 text-right">
                <h4><span class="glyphicon glyphicon-info-sign"></span> @Html.LabelFor(model => model.Info2)</h4>
            </div>
            <div class="col-md-8 NormalBorder-Left text-left">
                @Html.EditorFor(model => model.Info2, new { htmlAttributes = new { rows = "10", cols = "50", style = "resize:none; max-width:none;" } })
                @Html.ValidationMessageFor(model => model.Info2, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-4 text-right">
                <h4><span class="glyphicon glyphicon-link"></span> @Html.LabelFor(model => model.Info3)</h4>
            </div>
            <div class="col-md-8 NormalBorder-Left text-left">
                @Html.EditorFor(model => model.Info3, new { htmlAttributes = new { rows = "10", cols = "50", style = "resize:none; max-width:none;" } })
                @Html.ValidationMessageFor(model => model.Info3, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Edit" class="btn btn-success FormBtn" />
            </div>
        </div>
        <br />
    </div>
    }
</div>