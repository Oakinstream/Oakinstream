@model Oakinstream.ViewModels.BlogViewModel

@{
    ViewBag.Title = "Create Blog Post";
}

<div class="container text-center">
    <div class="row">
        <div class="col-md-12  NormalBorder-Bottom">
            <br />
            <h1 class="text-primary"><strong>@ViewBag.Title</strong></h1>
        </div>
    </div>

    <div>
        @Html.ActionLink("Back to blog", "Index")
    </div>
    <br />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="jumbotron Margin-Top-20 NormalBorder">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-4 text-right">
                <h4><span class="glyphicon glyphicon-user"></span> @Html.LabelFor(model => model.Title):</h4>
            </div>
            <div class="col-md-8 NormalBorder-Left text-left">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "FormBox" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-4 text-right">
                <h4><span class="glyphicon glyphicon-th-large"></span> @Html.LabelFor(model => model.BlogCategoryID, "Category"):</h4>
            </div>
            <div class="col-md-8 NormalBorder-Left text-left">
                @Html.DropDownListFor(vm => vm.BlogCategoryID, Model.BlogCategoryList, "Choose Category", htmlAttributes: new { @class = "FormBox" })
                @Html.ValidationMessageFor(model => model.BlogCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-4 text-right">
                <h4><span class="glyphicon glyphicon-picture"></span> Image 1</h4>
            </div>
            <div class="col-md-8 NormalBorder-Left text-left">
                @Html.DropDownListFor(vm => vm.BlogImages, Model.ImageLists[0], "Choose Image", htmlAttributes: new { @class = "FormBox" })
                @Html.ValidationMessageFor(model => model.ImageLists, "", new { @class = "text-danger" })
                <button type="button" class="btn btn-link" data-toggle="collapse" data-target="#Images" style="">Add more images</button>
            </div>
        </div>
        <hr />
        <div id="Images" class="collapse">
            @for (int i = 1; i < Model.ImageLists.Count; i++)
            {
                <div class="row Margin-Top-20">
                    <div class="col-md-4 text-right">
                        <h4><span class="glyphicon glyphicon-picture"></span> Image @(i + 1):</h4>
                    </div>
                    <div class="col-md-8 NormalBorder-Left text-left">
                        @Html.DropDownListFor(vm => vm.BlogImages, Model.ImageLists[i], "Choose Image", htmlAttributes: new { @class = "FormBox" })
                        @Html.ValidationMessageFor(model => model.ImageLists, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        </div>
        <hr />
        <div class="row">
            <div class="col-md-4 text-right">
                <h4><span class="glyphicon glyphicon-info-sign"></span> @Html.LabelFor(model => model.Description)</h4>
            </div>
            <div class="col-md-8 NormalBorder-Left text-left">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { rows = "10", cols = "50", style = "resize:none; max-width:none;" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-4 text-right">
                <h4><span class="glyphicon glyphicon-link"></span> @Html.LabelFor(model => model.Link):</h4>
            </div>
            <div class="col-md-8 NormalBorder-Left text-left">
                @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "FormBox" } })
                @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Create" class="btn btn-success FormBtn" />
            </div>
        </div>
        <br />
    </div>
  }
</div>