@model Oakinstream.ViewModels.SearchIndexViewModel
@using PagedList.Mvc;

@{
    ViewBag.Title = "Projects";
}

<div class="container" style="text-align:center">
    <div class="row NormalBorder-Bottom">
        @if (Request.IsAuthenticated && User.IsInRole("Admin"))
        {
            <div class="col-md-12">
                <br />
                <h1 class="text-primary"><strong>My @ViewBag.Title</strong></h1>
            </div>
        }
        else
        {
            <div class="col-md-12">
                <br />
                <h1 class="text-primary"><strong>@ViewBag.Title</strong></h1>
            </div>
        }
    </div>
    @if (Request.IsAuthenticated && User.IsInRole("Admin"))
    {
        <br />
        <div class="btn" style="width:30%;">
            <span class="glyphicon glyphicon-plus"></span>
            <a href="@Url.Action("Create", "Projects")" class="btn btn-success" style="width:50%;">Create Project</a>
        </div>
    }
    <hr />

    <div class="row">
        <div class="col-md-12">

            @using (Html.BeginRouteForm("ProjectIndex", FormMethod.Get, new { @class = "SearchBar" }))
            {
                @Html.TextBox("Search", null, new { @class = "SearchBar", @placeholder = "Search" })
            }
            @{
                string ProjectString = "";
                if (Model.Projects.TotalItemCount == 1) { ProjectString = "project"; } else { ProjectString = "projects"; }
            }
            @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing" : "You searched for " + Model.Search + ", found") @Model.Projects.TotalItemCount @ProjectString
            @using (Html.BeginRouteForm("ProjectIndex", FormMethod.Get))
            {
                <button type="button" class="btn btn-default FilterBtn" data-toggle="collapse" data-target="#filters">Filters</button>
                <hr />
                <div id="filters" class="collapse">
                    <div class="row" style="text-align:center">
                        <div class="btn-group-vertical">
                            @Html.DropDownListFor(vm => vm.Category, Model.CategoryFilterItems, "CategoryList", new { @class = "FilterLists" })
                            @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "SortBy", new { @class = "FilterLists" })
                            <input type="submit" value="Filter" class="btn btn-success" />
                            <input type="hidden" name="Search" id="Search" value="@Model.Search" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<hr />

@if (Model.Projects.TotalItemCount == 0)
{
    <div class="col-md-12" style="text-align:center;">
        <h1 class="text-uppercase text-danger">No Projects! :(</h1>
        <br />
        <h1 class="text-uppercase text-danger">...Or the root is Project/Index</h1>
    </div>
}

<div class="container" style="text-align:center">
    <div class="row" style="margin-top:10px;">
        @foreach (var item in Model.Projects)
        {
            <div class="col-md-12" style="text-align:center">
                @if (item.ProjectImage != null)
                {
                    <a href="@Url.Action("Details", new { id = item.ID })" style="text-decoration:none;">
                        <img class="ProjectImage" src="@Url.Content(Constants.ProjectThumbnailPath + item.ProjectImage.FileName)" alt="@item.ProjectImage.FileName" />
                    </a>
                }
                else
                {
                    <a href="@Url.Action("Details",new { id = item.ID })" style="text-decoration:none;">
                        <img class="ProjectImage" src="@Url.Content(Constants.ProjectThumbnailPath + "ProjectDefault.png")" alt="ProjectDefault.png" />
                    </a>
                }
                <br />
                <a href="@Url.Action("Details",new { id = item.ID })" style="text-decoration:none;">
                    <h1>@Html.DisplayFor(modelItem => item.Name)</h1>
                </a>
                <br />
                @if (Request.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <span class="glyphicon glyphicon-edit"></span>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID })
                    @Html.Raw(" | ")
                    <span class="glyphicon glyphicon-remove-circle"></span>
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                }
                <hr />
            </div>
        }
    </div>
</div>
<hr />

@if (Model.Projects.PageCount > 10)
{
    <div class="row" style="text-align:center;">
        Page @(Model.Projects.PageCount < Model.Projects.PageNumber ? 0 : Model.Projects.PageNumber) of
        @Model.Projects.PageCount @Html.PagedListPager(Model.Projects, page =>
Url.Action("Index", new { category = Model.Category, search = Model.Search, sortBy = Model.SortBy, page}))
    </div>
}

