@model IEnumerable<Oakinstream.Models.CheckingAccount>

@{
    ViewBag.Title = "Account List";
}

<div class="container checkingaccount-container">
    <div class="row checkingaccount-header">
        <div class="col-md-12">
            <h1 class="text-uppercase"><span class="checkingaccount-title">@ViewBag.Title</span></h1>
        </div>
        <div class="btn">
            <a class="btn site-btn-back" href="@Url.Action("Index", "Admin")"><span class="glyphicon glyphicon-backward"></span> Back to admin</a>
        </div>
    </div>

    @if (Request.IsAuthenticated && User.IsInRole("Admin"))
    {
        <div class="btn">
            <a class="btn btn-success site-btn-create" href="@Url.Action("Create", "CheckingAccount")"><span class="glyphicon glyphicon-plus"></span></a>
        </div>
    }

    @{
        var itemcounter = 0;
        foreach (var item in Model)
        {
            itemcounter++;
        }
    }

    @if (itemcounter != 0)
    {
        <div class="jumbotron checkingaccount-jumbotron">

            <div class="row">
                <div class="col-md-2">
                    <h3 class="text-uppercase checkingaccount-text" style="text-decoration:underline">@Html.DisplayNameFor(model => model.User.Pin)</h3>
                </div>
                <div class="col-md-2">
                    <h3 class="text-uppercase checkingaccount-text" style="text-decoration:underline">@Html.DisplayNameFor(model => model.AccountNumber)</h3>
                </div>
                <div class="col-md-2">
                    <h3 class="text-uppercase checkingaccount-text" style="text-decoration:underline">@Html.DisplayNameFor(model => model.Name)</h3>
                </div>
                <div class="col-md-2">
                    <h3 class="text-uppercase checkingaccount-text" style="text-decoration:underline">@Html.DisplayNameFor(model => model.User.UserName)</h3>
                </div>
                <div class="col-md-2">
                    <h3 class="text-uppercase checkingaccount-text" style="text-decoration:underline">@Html.DisplayNameFor(model => model.User.Email)</h3>
                </div>
                <div class="col-md-2">
                    <h3 class="text-uppercase checkingaccount-text" style="text-decoration:underline">Locked</h3>
                </div>
            </div>
            <hr />
            @foreach (var item in Model)
            {
                <div class="row">
                    <div class="col-md-2 NormalBorder-Right">
                        @if (item.User.Pin == null)
                        {
                            <h5 class="checkingaccount-text">@Html.Raw("No Pin")</h5>
                        }
                        else
                        {
                            <h5 class="checkingaccount-text">@Html.DisplayFor(model => item.User.Pin)</h5>
                        }
                    </div>
                    <div class="col-md-2 NormalBorder-Right">
                        <h5 class="checkingaccount-text">@Html.DisplayFor(model => item.AccountNumber)</h5>
                    </div>
                    <div class="col-md-2 NormalBorder-Right">
                        <h5 class="checkingaccount-text">@Html.DisplayFor(model => item.Name)</h5>
                    </div>
                    <div class="col-md-2 NormalBorder-Right">
                        <h5 class="checkingaccount-text">@Html.DisplayFor(model => item.User.UserName)</h5>
                    </div>
                    <div class="col-md-2 NormalBorder-Right">
                        <h5 class="checkingaccount-text">@Html.DisplayFor(model => item.User.Email)</h5>
                    </div>
                    <div class="col-md-2">
                        <h5 class="checkingaccount-text">@Html.DisplayFor(model => item.User.LockoutEnabled)</h5>
                    </div>
                </div>
                <hr />
            }
        </div>
    }
</div>