@model Oakinstream.ViewModels.BlogViewModel

@{
    ViewBag.Title = "Edit Blog Post";
}

<div class="container blog-CED-container">
    <div class="row blog-CED-header">
        <div class="col-md-12">
            <h1 class="text-primary"><span class="blog-CED-header-title">@ViewBag.Title</span></h1>
        </div>
        <div class="btn">
            <a class="btn site-btn-back" href="@Url.Action("Index", "Blog")"><span class="glyphicon glyphicon-backward"></span> Back to Blog</a>
        </div>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="jumbotron site-border-normal blog-CED-jumbotron">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <div class="col-md-4 text-right">
                    <h4 class="blog-CED-text"><span class="glyphicon glyphicon-user"></span> @Html.LabelFor(model => model.Title):</h4>
                </div>
                <div class="col-md-8 site-border-normal-left text-left">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "site-form" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-4 text-right">
                    <h4 class="blog-CED-text"><span class="glyphicon glyphicon-th-list"></span> @Html.LabelFor(model => model.BlogCategoryID, "Category"):</h4>
                </div>
                <div class="col-md-8 site-border-normal-left text-left">
                    @Html.DropDownListFor(vm => vm.BlogCategoryID, Model.BlogCategoryList, "Choose Category", htmlAttributes: new { @class = "site-form" })
                    @Html.ValidationMessageFor(model => model.BlogCategoryID, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-4 text-right">
                    <h4 class="blog-CED-text"><span class="glyphicon glyphicon-picture"></span> Image 1</h4>
                </div>
                <div class="col-md-8 site-border-normal-left text-left">
                    @Html.DropDownListFor(vm => vm.BlogImages, Model.ImageLists[0], "Choose Image", htmlAttributes: new { @class = "site-form" })
                    @Html.ValidationMessageFor(model => model.ImageLists, "", new { @class = "text-danger" })
                    <button type="button" class="btn btn-link site-btn-add-more" data-toggle="collapse" data-target="#Images" style="">Add more images</button>
                </div>
            </div>
            <hr />
            <div id="Images" class="collapse">
                @for (int i = 1; i < Model.ImageLists.Count; i++)
                {
                    <div class="row site-margin-top-20">
                        <div class="col-md-4 text-right">
                            <h4 class="blog-CED-text"><span class="glyphicon glyphicon-picture"></span> Image @(i + 1):</h4>
                        </div>
                        <div class="col-md-8 site-border-normal-left text-left">
                            @Html.DropDownListFor(vm => vm.BlogImages, Model.ImageLists[i], "Choose Image", htmlAttributes: new { @class = "site-form" })
                            @Html.ValidationMessageFor(model => model.ImageLists, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            </div>
            <hr />
            <div class="row">
                <div class="col-md-4 text-right">
                    <h4 class="blog-CED-text"><span class="glyphicon glyphicon-info-sign"></span> @Html.LabelFor(model => model.Description)</h4>
                </div>
                <div class="col-md-8 site-border-normal-left text-left">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { rows = "10", cols = "50", style = "resize:none; max-width:none;" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-4 text-right">
                    <h4 class="blog-CED-text"><span class="glyphicon glyphicon-link"></span> @Html.LabelFor(model => model.Link):</h4>
                </div>
                <div class="col-md-8 site-border-normal-left text-left">
                    @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "site-form" } })
                    @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-12">
                    <input type="submit" value="Edit" class="btn btn-info site-btn-edit-big" />
                </div>
                <br />
            </div>
        </div>
    }
</div>