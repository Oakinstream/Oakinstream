@model IEnumerable<Oakinstream.Models.About>

<div class="container about-container" data-aos="zoom-out-up" data-aos-duration="3000">
    <div class="row">
        <div class="jumbotron col-md-12 about-holder">

            <br />
            @if (Request.IsAuthenticated && User.IsInRole("Admin"))
            {
                var itemcount = 0;
                foreach (var item in Model)
                {
                    if (itemcount == 0)
                    {<a class="btn btn-info " href="@Url.Action("Edit", "About", new { id = item.ID })" style="cursor:pointer;"><span class="glyphicon glyphicon-edit"></span></a>}
                    itemcount++;
                }
            }

            <h1 data-aos="zoom-out-up" data-aos-duration="2000"><span class="about-title">@Html.DisplayFor(model => model.First().Name)</span></h1>
            @if (Model.First().Age >= 0 && Model.First().Age <= 200)
            {
                <h2 data-aos="zoom-out-up" data-aos-duration="2000"><span class="about-age"> @Html.DisplayNameFor(model => model.Age): @Html.DisplayFor(model => model.First().Age)</span></h2>
            }
            else
            {
                <h2 data-aos="zoom-out-up" data-aos-duration="2000"><span class="about-age">@Html.DisplayNameFor(model => model.Age): Unknown</span></h2>
            }

            <br />

            @if (Model.First().AboutImage != null)
            {
                <img class="about-image" data-aos="zoom-out-up" data-aos-duration="2000"  src="@Url.Content(Constants.AboutThumbnailPath + Model.First().AboutImage.FileName)" alt="@Model.First().AboutImage.FileName" />
            }
            else
            {
                <img class="about-image" data-aos="zoom-out-up" data-aos-duration="2000"  src="@Url.Content(Constants.DefualtImagePath + "default.jpg")" alt="LOL.png" />
            }
            <hr />

            <div class="row" style="text-align:center;">
                <div class="col-md-4">
                    <h3><span class="about-text-header">About:</span></h3>
                    <div class="about-text">
                        @Html.DisplayFor(model => model.First().Info1)
                    </div>
                </div>
                <div class="col-md-4">
                    <h3><span class="about-text-header">Hobby:</span></h3>
                    <div class="about-text">
                        @Html.DisplayFor(model => model.First().Info2)
                    </div>
                </div>
                <div class="col-md-4">
                    <h3><span class="about-text-header">Experience:</span></h3>
                    <div class="about-text">
                        @Html.DisplayFor(model => model.First().Info3)
                    </div>
                </div>
            </div>

            <hr />

            @{
                var itemcounter = 0;
                foreach (var file in Model.First().AboutFileMappings)
                {
                    itemcounter++;
                }
            }

            @if (itemcounter != 0)
            {
                <div class="col-md-12">
                    <h3><span class="about-files-header">Files:</span></h3>
                    <div class="well Width-80 Margin-Auto Margin-Top-10 about-file-holder">
                        <div class="btn-group-justified">
                            @foreach (var file in Model.First().AboutFileMappings)
                            {
                                <a class="btn btn-default about-file-btn" href="@Url.Content(Constants.AboutFilePath + file.AboutFile.FileName)" style="cursor:pointer"><span class="glyphicon glyphicon-file"></span> @file.AboutFile.FileName</a>
                            }
                        </div>
                    </div>
                    <hr />
                </div>
            }

            @if (Request.IsAuthenticated && User.IsInRole("Admin"))
            {
                <p><span class="about-created">Created by: @Html.DisplayFor(model => model.First().CreatedBy) - @Html.DisplayFor(model => model.First().CreatedDate)</span></p>
                if (Model.First().UpdatedBy != null)
                {
                    <p><span class="about-created">Updated by: @Html.DisplayFor(model => model.First().UpdatedBy) - @Html.DisplayFor(model => model.First().UpdatedDate)</span></p>
                }
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/Scripts/aos.js")
    <script>
            AOS.init({
            });
    </script>
}
