@model Oakinstream.Models.Project

@{
    ViewBag.Title = Html.DisplayFor(@model => model.Name);
}

<div class="container project-details-container">
    <div class="row project-details-header">
        <div class="col-md-12">
            <h1 class="text-uppercase"><span class="project-details-title">Title: @ViewBag.Title</span></h1>
            <h3 class="text-muted text-uppercase"><span class="project-details-category">Category: @Html.DisplayFor(model => model.ProjectCategory.Name)</span></h3>
        </div>
        @if (Request.IsAuthenticated && User.IsInRole("Admin"))
        {
            <div class="btn">
                <a class="btn btn-info site-btn-edit" href="@Url.Action("Edit", "Projects", new { id = Model.ID })"><span class="glyphicon glyphicon-edit"></span></a>
            </div>
            <div class="btn">
                <a class="btn btn-danger site-btn-delete" href="@Url.Action("Delete", "Projects", new { id = Model.ID })"><span class="glyphicon glyphicon-trash"></span></a>
            </div>
        }
        <br />
        <div class="btn">
            <a class="btn btn project-btn-back" href="@Url.Action("Index", "Projects")"><span class="glyphicon glyphicon-backward"></span> Back to Projects</a>
        </div>
    </div>
    <br />
    <div class="jumbotron project-details-jumbotron">
        <div class="row">
            <div class="col-md-12 text-center">
                @if (Model.ProjectImage != null)
                {
                    <img class="project-details-image" src="@Url.Content(Constants.ProjectThumbnailPath + Model.ProjectImage.FileName)" alt="@Model.ProjectImage.FileName" />
                }
                else
                {
                    <img class="project-details-image" src="@Url.Content(Constants.ProjectThumbnailPath + "ProjectDefault.png")" alt="Default.png" />
                }
            </div>
            <div class="col-md-12 project-details-description-holder">
                <div class="well project-details-description">
                    <div class="project-details-description-text">
                        <h2 class="text-uppercase"><strong>Description:</strong></h2>
                        <br />
                        @Html.DisplayFor(model => model.Description)

                        @if (Request.IsAuthenticated && User.IsInRole("Admin"))
                        {
                            <hr />
                            <p><strong>Created by: @Html.DisplayFor(model => model.CreatedBy) - @Html.DisplayFor(model => model.CreatedDate)</strong></p>
                            if (Model.UpdatedBy != null)
                            {
                                <p><strong>Updated by: @Html.DisplayFor(model => model.UpdatedBy) - @Html.DisplayFor(model => model.UpdatedDate)</strong></p>
                            }
                        }
                    </div>
                </div>
            </div>
            @if (Request.IsAuthenticated && User.IsInRole("Admin"))
            {
                <div class="col-md-12 project-details-files-holder">
                    <div class="well Width-80 project-details-files">
                        <h2 class="text-uppercase"><strong>Files:</strong></h2>
                        <div class="btn-group-justified">
                            @foreach (var file in Model.ProjectFileMappings)
                            {
                                <a class="btn btn-default project-details-files-btn" href="@Url.Content(Constants.ProjectFilePath + file.ProjectFile.FileName)" style="cursor:pointer"><span class="glyphicon glyphicon-file"></span> @file.ProjectFile.FileName</a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>